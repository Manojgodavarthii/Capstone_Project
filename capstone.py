# -*- coding: utf-8 -*-
"""capstone.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Fn6WvaPQNPvHuUWEieY2irNQVTJiBREy
"""

import pandas as pd
import numpy as np

df=pd.read_csv("/content/Book_1(a).csv", encoding='latin-1')

df.head()

df.info()

df.shape

df.columns

"""# Data Visualization"""

import matplotlib.pyplot as plt
import seaborn as sns


ratings = df.groupby('Course Code').size()
plt.figure(figsize=(10, 6))
sns.histplot(ratings, bins=50, kde=False)
plt.title('Number of  subject per  groupby Course Code')
plt.xlabel('Number of subjects')
plt.ylabel('Count')
plt.show()

df.head(1)

#df['Movie_Genre'] = df['Movie_Genre']

genre_popularity = df.groupby('Marks (200)')['Marks (200)'].mean().sort_values(ascending=False)

plt.figure(figsize=(12, 8))

sns.barplot(x=genre_popularity.index, y=genre_popularity.values, palette='viridis')
plt.title('Average Movie Rating by Genre')
plt.xlabel('Genre')
plt.ylabel('Average Rating')
plt.xticks([])
plt.show()

"""# Get Feature Selection
## Defining Target Variable (y) and Feature Variables (X)
"""

df_features=df[['Course Code', 'Marks (200)', 'Grade', 'Grade Points']].fillna('')

"""Selected five existing filters to recommend movies, which can vary by project, such as vote counts, budget, language, and more."""

df_features.shape

df_features

"""# Data Modeling"""

X = df_features['Marks (200)'].astype(str) + " " + df_features['Grade'] + " " + df_features['Grade Points'].astype(str)

X

"""# Get Similarity Score using Cosine Similarity
## Model Evaluation

cosine_similarity computes the L2-normalized dot product of vectors.Euclidean (L2) normalization projects the vectors onto the unit sphere, and their dot products is then the cosine fo the angle between the points denoted by the vectors.
"""

from sklearn.metrics.pairwise import cosine_similarity

Similarity_score=cosine_similarity(X)

Similarity_score

Similarity_score.shape